using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace NetStd.SimpleIntervalRecorder.July2018
{
    /// <summary>
    /// Silverlight compatible version. Uses DateTime class
    /// </summary>
    public class InternalClockV1 : IInternalClock
    {
        #region ctors

        public InternalClockV1()
        {

            NanosecPerTick = 100;

            _startPointInTimeTicks = DateTime.UtcNow.Ticks;
        }

        #endregion

        #region fields

        private readonly long _startPointInTimeTicks;

        #endregion

        #region props

        public double NanosecPerTick { get; }

        public long TimeNowTicks => DateTime.UtcNow.Ticks - _startPointInTimeTicks;

        #endregion

        #region methods

        public string MeasureReportedAccuracy()
        {
            var sb = new StringBuilder();

            sb.AppendLine("Timestamps are being generated by the unpredictable DateTime class.");

            long ticks1;
            long ticks2;
            long latency;

            var listOfDeltaTicks = new List<long>();

            const int numOfIterations = 100000;
            for (var i = 0; i < numOfIterations; i++)
            {
                ticks1 = DateTime.Now.Ticks;
                ticks2 = DateTime.Now.Ticks;
                latency = ticks1 - ticks2;
                listOfDeltaTicks.Add(Math.Abs(latency));
            }

            var deltaMaxMillisec = listOfDeltaTicks.Max(z => z) * NanosecPerTick / 10e6;


            sb.AppendLine(
                $"Tested here and now the worst reported delta in many, many trials between successive timestamps is {deltaMaxMillisec:n2}ms.");
            sb.AppendLine(
                $"For 99% accuracy any single measured interval should therefore exceed {(deltaMaxMillisec * 100):n0}ms.");
            sb.AppendLine("However because deltas occur sporadically, their average diminishes with the number of iterations performed.");
            sb.AppendLine("With more than 100 iterations performed in any test protocol they diminish to the point of irrelevancy.");

            return sb.ToString();
        }

        #endregion
    }
}
